{
	"auto_complete":
	{
		"selected_items":
		[
			[
				"create",
				"create_engine"
			],
			[
				"remove",
				"removeParenthesis\tfunction"
			],
			[
				"re",
				"removeParenthesis\tfunction"
			],
			[
				"topal",
				"topalbums\tstatement"
			],
			[
				"crea",
				"create_topalbums_table\tfunction"
			],
			[
				"cre",
				"create_deals_table\tfunction"
			],
			[
				"decla",
				"declarative_base\timport"
			],
			[
				"sql",
				"sqlalchemy"
			],
			[
				"R",
				"RYM_rating"
			],
			[
				"next",
				"next_page\tstatement"
			],
			[
				"fin",
				"find_between"
			],
			[
				"chart",
				"chart_detail_l2\tstatement"
			],
			[
				"cha",
				"chart_detail_l2\tstatement"
			],
			[
				"char",
				"chart_detail_l1\tstatement"
			],
			[
				"get",
				"player.get_player"
			],
			[
				"nex",
				"next_page\tstatement"
			],
			[
				"url",
				"urljoin"
			],
			[
				"hm",
				"humor"
			],
			[
				"extra",
				"extract_with_css\tfunction"
			],
			[
				"ex",
				"extract_first"
			],
			[
				"per",
				"elements.period"
			],
			[
				"py",
				"pyplot\tmodule"
			],
			[
				"Choice",
				"ChoiceInline"
			],
			[
				"pub",
				"pub_date"
			],
			[
				"HttpR",
				"HttpResponseRedirect"
			],
			[
				"Http",
				"HttpResponse"
			],
			[
				"selec",
				"selected_choice"
			],
			[
				"question",
				"question_id"
			]
		]
	},
	"buffers":
	[
		{
			"file": "rym_chart_scraper/spiders/top_music_charts.py",
			"settings":
			{
				"buffer_size": 2202,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		},
		{
			"file": "rym_chart_scraper/items.py",
			"settings":
			{
				"buffer_size": 266,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		},
		{
			"file": "rym_chart_scraper/utility.py",
			"settings":
			{
				"buffer_size": 532,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		},
		{
			"file": "rym_chart_scraper/models.py",
			"settings":
			{
				"buffer_size": 813,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		},
		{
			"contents": "bash: no job control in this shell\nbash-3.2$ git status\nOn branch master\nYour branch is ahead of 'origin/master' by 1 commit.\n  (use \"git push\" to publish your local commits)\nChanges not staged for commit:\n  (use \"git add <file>...\" to update what will be committed)\n  (use \"git checkout -- <file>...\" to discard changes in working directory)\n\n\tmodified:   ../.gitignore\n\tmodified:   ../rym_chart_scraper.sublime-workspace\n\tmodified:   pipelines.py\n\tmodified:   settings.py\n\tmodified:   spiders/__pycache__/__init__.cpython-35.pyc\n\tmodified:   spiders/__pycache__/top_music_charts.cpython-35.pyc\n\tmodified:   spiders/top_music_charts.py\n\tmodified:   utility.py\n\nUntracked files:\n  (use \"git add <file>...\" to include in what will be committed)\n\n\tmodels.py\n\nno changes added to commit (use \"git add\" and/or \"git commit -a\")\nbash-3.2$ git add .\nbash-3.2$ git status\nOn branch master\nYour branch is ahead of 'origin/master' by 1 commit.\n  (use \"git push\" to publish your local commits)\nChanges to be committed:\n  (use \"git reset HEAD <file>...\" to unstage)\n\n\tnew file:   models.py\n\tmodified:   pipelines.py\n\tmodified:   settings.py\n\tmodified:   spiders/__pycache__/__init__.cpython-35.pyc\n\tmodified:   spiders/__pycache__/top_music_charts.cpython-35.pyc\n\tmodified:   spiders/top_music_charts.py\n\tmodified:   utility.py\n\nChanges not staged for commit:\n  (use \"git add <file>...\" to update what will be committed)\n  (use \"git checkout -- <file>...\" to discard changes in working directory)\n\n\tmodified:   ../.gitignore\n\tmodified:   ../rym_chart_scraper.sublime-workspace\n\nbash-3.2$ git commit -m 'added item pipelines into postgres'\n[master fa62901] added item pipelines into postgres\n 7 files changed, 94 insertions(+), 43 deletions(-)\n create mode 100644 rym_chart_scraper/models.py\n rewrite rym_chart_scraper/pipelines.py (77%)\n rewrite rym_chart_scraper/spiders/__pycache__/top_music_charts.cpython-35.pyc (77%)\nbash-3.2$ git push\nTo https://github.com/baasman/rym_chart_scraper.git\n   352c5e2..fa62901  master -> master\nbash-3.2$ ",
			"settings":
			{
				"buffer_size": 2029,
				"line_ending": "Unix",
				"name": "*REPL* [shell]",
				"scratch": true
			}
		},
		{
			"contents": "Jupyter Console 4.1.1\n\n\nIn [1]: from models import TopAlbums, db_connect, create_topalbums_table\nfrom sqlalchemy.orm import sessionmaker\n\n\nclass TopAlbumPipeline:\n    def __init__(self):\n        engine = db_connect()\n        create_topalbums_table(engine)\n        self.Session = sessionmaker(bind=engine)\n\n    def process_item(self, item, spider):\n        session = self.Session()\n        topalbums = TopAlbums(**item)\n\n        try:\n            session.add(topalbums)\n            session.commit()\n        except:\n            session.rollback()\n            raise\n        finally:\n            session.close()\n\n        return item\n\n\nIn [2]: db_connect()\n\nImportErrorTraceback (most recent call last)\n<ipython-input-2-177e46728f23> in <module>()\n----> 1 db_connect()\n\n/Users/baasman/Documents/python-workspace/rym_chart_scraper/rym_chart_scraper/models.py in db_connect()\n     10 \n     11 def db_connect():\n---> 12     return create_engine(URL(**settings.DATABASE))\n     13 \n     14 \n\n/Users/baasman/anaconda/lib/python3.5/site-packages/sqlalchemy/engine/__init__.py in create_engine(*args, **kwargs)\n    385     strategy = kwargs.pop('strategy', default_strategy)\n    386     strategy = strategies.strategies[strategy]\n--> 387     return strategy.create(*args, **kwargs)\n    388 \n    389 \n\n/Users/baasman/anaconda/lib/python3.5/site-packages/sqlalchemy/engine/strategies.py in create(self, name_or_url, **kwargs)\n     78                 if k in kwargs:\n     79                     dbapi_args[k] = pop_kwarg(k)\n---> 80             dbapi = dialect_cls.dbapi(**dbapi_args)\n     81 \n     82         dialect_args['dbapi'] = dbapi\n\n/Users/baasman/anaconda/lib/python3.5/site-packages/sqlalchemy/dialects/postgresql/psycopg2.py in dbapi(cls)\n    552     @classmethod\n    553     def dbapi(cls):\n--> 554         import psycopg2\n    555         return psycopg2\n    556 \n\nImportError: No module named 'psycopg2'\n\nIn [3]: create_topalbums_table()\n\nTypeErrorTraceback (most recent call last)\n<ipython-input-3-b5f918487c4d> in <module>()\n----> 1 create_topalbums_table()\n\nTypeError: create_topalbums_table() missing 1 required positional argument: 'engine'\n\nIn [4]: engine = db_connect()\n\nImportErrorTraceback (most recent call last)\n<ipython-input-4-0c7b63f608f2> in <module>()\n----> 1 engine = db_connect()\n\n/Users/baasman/Documents/python-workspace/rym_chart_scraper/rym_chart_scraper/models.py in db_connect()\n     10 \n     11 def db_connect():\n---> 12     return create_engine(URL(**settings.DATABASE))\n     13 \n     14 \n\n/Users/baasman/anaconda/lib/python3.5/site-packages/sqlalchemy/engine/__init__.py in create_engine(*args, **kwargs)\n    385     strategy = kwargs.pop('strategy', default_strategy)\n    386     strategy = strategies.strategies[strategy]\n--> 387     return strategy.create(*args, **kwargs)\n    388 \n    389 \n\n/Users/baasman/anaconda/lib/python3.5/site-packages/sqlalchemy/engine/strategies.py in create(self, name_or_url, **kwargs)\n     78                 if k in kwargs:\n     79                     dbapi_args[k] = pop_kwarg(k)\n---> 80             dbapi = dialect_cls.dbapi(**dbapi_args)\n     81 \n     82         dialect_args['dbapi'] = dbapi\n\n/Users/baasman/anaconda/lib/python3.5/site-packages/sqlalchemy/dialects/postgresql/psycopg2.py in dbapi(cls)\n    552     @classmethod\n    553     def dbapi(cls):\n--> 554         import psycopg2\n    555         return psycopg2\n    556 \n\nImportError: No module named 'psycopg2'\n\nIn [5]: import rym_chart_scraper.settings\n\nImportErrorTraceback (most recent call last)\n<ipython-input-5-335d65587fa9> in <module>()\n----> 1 import rym_chart_scraper.settings\n\nImportError: No module named 'rym_chart_scraper'\n\nIn [6]: %pwd\nOut[6]: '/Users/baasman/Documents/python-workspace/rym_chart_scraper/rym_chart_scraper'\n\nIn [7]: import settings\n\nIn [8]: from sqlalchemy import create_engine\nfrom sqlalchemy.engine.url import URL\nfrom sqlalchemy.ext.declarative import declarative_base\nfrom sqlalchemy import Column, Integer, String, DateTime\n\nimport rym_chart_scraper.settings \n\nBase = declarative_base()\n\n\ndef db_connect():\n    return create_engine(URL(**settings.DATABASE))\n\n\ndef create_topalbums_table(engine):\n    Base.metadata.create_all(engine)\n\n\nclass TopAlbums(Base):\n\n    __tablename__ = 'top_albums'\n\n    id = Column(Integer, primary_key=True)\n    Artist = Column('Artist', String)\n    Album = Column('Album', String)\n    Chart_year = Column('Chart_year', String)\n    Genre = Column('Genre', String)\n    Ratings = Column('Ratings', Integer)\n    Reviews = Column('Reviews', Integer)\n    Date = Column('Date', DateTime)\n\n\nImportErrorTraceback (most recent call last)\n<ipython-input-8-c8c730cc3bf0> in <module>()\n----> 1 from binascii import unhexlify as __un; exec(compile(__un(\"66726f6d2073716c616c6368656d7920696d706f7274206372656174655f656e67696e650a66726f6d2073716c616c6368656d792e656e67696e652e75726c20696d706f72742055524c0a66726f6d2073716c616c6368656d792e6578742e6465636c6172617469766520696d706f7274206465636c617261746976655f626173650a66726f6d2073716c616c6368656d7920696d706f727420436f6c756d6e2c20496e74656765722c20537472696e672c204461746554696d650a0a696d706f72742072796d5f63686172745f736372617065722e73657474696e6773200a0a42617365203d206465636c617261746976655f6261736528290a0a0a6465662064625f636f6e6e65637428293a0a2020202072657475726e206372656174655f656e67696e652855524c282a2a73657474696e67732e444154414241534529290a0a0a646566206372656174655f746f70616c62756d735f7461626c6528656e67696e65293a0a20202020426173652e6d657461646174612e6372656174655f616c6c28656e67696e65290a0a0a636c61737320546f70416c62756d732842617365293a0a0a202020205f5f7461626c656e616d655f5f203d2027746f705f616c62756d73270a0a202020206964203d20436f6c756d6e28496e74656765722c207072696d6172795f6b65793d54727565290a20202020417274697374203d20436f6c756d6e2827417274697374272c20537472696e67290a20202020416c62756d203d20436f6c756d6e2827416c62756d272c20537472696e67290a2020202043686172745f79656172203d20436f6c756d6e282743686172745f79656172272c20537472696e67290a2020202047656e7265203d20436f6c756d6e282747656e7265272c20537472696e67290a20202020526174696e6773203d20436f6c756d6e2827526174696e6773272c20496e7465676572290a2020202052657669657773203d20436f6c756d6e282752657669657773272c20496e7465676572290a2020202044617465203d20436f6c756d6e282744617465272c204461746554696d65290a0a\").decode(\"utf-8\"), \"<string>\", \"exec\"))\n\n<string> in <module>()\n\nImportError: No module named 'rym_chart_scraper'\n\nIn [9]: import ..settings \n  File \"<string>\", line 1\n    import ..settings\n           ^\nSyntaxError: invalid syntax\n\n\nIn [10]: import .settings \n  File \"<string>\", line 1\n    import .settings\n           ^\nSyntaxError: invalid syntax\n\n\nIn [11]: from . import settings\n\nSystemErrorTraceback (most recent call last)\n<ipython-input-11-5f64a85b5d09> in <module>()\n----> 1 from binascii import unhexlify as __un; exec(compile(__un(\"66726f6d202e20696d706f72742073657474696e67730a\").decode(\"utf-8\"), \"<string>\", \"exec\"))\n\n<string> in <module>()\n\nSystemError: Parent module '' not loaded, cannot perform relative import\n\nIn [12]: from sqlalchemy import Column, Integer, String, DateTime, Float\n\nIn [13]: var = '(1960)'\n\nIn [14]: def removeParenthesis(var):\n    try:\n        var.replace('(', \"\")\n        var.replace(')', \"\")\n        return var\n    except:\n        return \"\"\n\n\nIn [15]: removeParenthesis(var)\nOut[15]: '(1960)'\n\nIn [16]: var.replace('(', \"\")\nOut[16]: '1960)'\n\nIn [17]: var\nOut[17]: '(1960)'\n\nIn [18]: removeParenthesis(var)\nOut[18]: '(1960)'\n\nIn [19]: def removeParenthesis(var):\n    try:\n        var = var.replace('(', \"\")\n        var = var.replace(')', \"\")\n        return var\n    except:\n        return \"\"\n\n\nIn [20]: var\nOut[20]: '(1960)'\n\nIn [21]: removeParenthesis(var)\nOut[21]: '1960'\n\nIn [22]: from sqlalchemy import create_engine\nfrom sqlalchemy.engine.url import URL\nfrom sqlalchemy.ext.declarative import declarative_base\nfrom sqlalchemy import Column, Integer, String, DateTime, Float\n\nfrom . import settings\n\nBase = declarative_base()\n\n\ndef db_connect():\n    return create_engine(URL(**settings.DATABASE))\n\n\ndef create_topalbums_table(engine):\n    Base.metadata.create_all(engine)\n\n\nclass TopAlbums(Base):\n\n    __tablename__ = 'top_albums'\n\n    id = Column(Integer, primary_key=True)\n    Artist = Column('Artist', String)\n    Album = Column('Album', String)\n    Chart_year = Column('Chart_year', Integer)\n    Genre = Column('Genre', String)\n    RYMRating = Column('RYMRating', Float)\n    Ratings = Column('Ratings', Integer)\n    Reviews = Column('Reviews', Integer)\n    Date = Column('Date', DateTime)\n\n\nSystemErrorTraceback (most recent call last)\n<ipython-input-22-642747cb6cb1> in <module>()\n----> 1 from binascii import unhexlify as __un; exec(compile(__un(\"66726f6d2073716c616c6368656d7920696d706f7274206372656174655f656e67696e650a66726f6d2073716c616c6368656d792e656e67696e652e75726c20696d706f72742055524c0a66726f6d2073716c616c6368656d792e6578742e6465636c6172617469766520696d706f7274206465636c617261746976655f626173650a66726f6d2073716c616c6368656d7920696d706f727420436f6c756d6e2c20496e74656765722c20537472696e672c204461746554696d652c20466c6f61740a0a66726f6d202e20696d706f72742073657474696e67730a0a42617365203d206465636c617261746976655f6261736528290a0a0a6465662064625f636f6e6e65637428293a0a2020202072657475726e206372656174655f656e67696e652855524c282a2a73657474696e67732e444154414241534529290a0a0a646566206372656174655f746f70616c62756d735f7461626c6528656e67696e65293a0a20202020426173652e6d657461646174612e6372656174655f616c6c28656e67696e65290a0a0a636c61737320546f70416c62756d732842617365293a0a0a202020205f5f7461626c656e616d655f5f203d2027746f705f616c62756d73270a0a202020206964203d20436f6c756d6e28496e74656765722c207072696d6172795f6b65793d54727565290a20202020417274697374203d20436f6c756d6e2827417274697374272c20537472696e67290a20202020416c62756d203d20436f6c756d6e2827416c62756d272c20537472696e67290a2020202043686172745f79656172203d20436f6c756d6e282743686172745f79656172272c20496e7465676572290a2020202047656e7265203d20436f6c756d6e282747656e7265272c20537472696e67290a2020202052594d526174696e67203d20436f6c756d6e282752594d526174696e67272c20466c6f6174290a20202020526174696e6773203d20436f6c756d6e2827526174696e6773272c20496e7465676572290a2020202052657669657773203d20436f6c756d6e282752657669657773272c20496e7465676572290a2020202044617465203d20436f6c756d6e282744617465272c204461746554696d65290a0a\").decode(\"utf-8\"), \"<string>\", \"exec\"))\n\n<string> in <module>()\n\nSystemError: Parent module '' not loaded, cannot perform relative import\n\nIn [23]: from sqlalchemy import create_engine\nfrom sqlalchemy.engine.url import URL\nfrom sqlalchemy.ext.declarative import declarative_base\n\n\nIn [24]: Base = declarative_base()\n\n\ndef db_connect():\n    return create_engine(URL(**settings.DATABASE))\n\n\nIn [25]: from rym_chart_scraper.settings import settings\n\nImportErrorTraceback (most recent call last)\n<ipython-input-25-b3c9faa5caa6> in <module>()\n----> 1 from rym_chart_scraper.settings import settings\n\nImportError: No module named 'rym_chart_scraper'\n\nIn [26]: import rym_chart_scraper.settings\n\nImportErrorTraceback (most recent call last)\n<ipython-input-26-335d65587fa9> in <module>()\n----> 1 import rym_chart_scraper.settings\n\nImportError: No module named 'rym_chart_scraper'\n\nIn [27]: import os\n\nIn [28]: os.getcwd()\nOut[28]: '/Users/baasman/Documents/python-workspace/rym_chart_scraper/rym_chart_scraper'\n\nIn [29]: from . import settings\n\nSystemErrorTraceback (most recent call last)\n<ipython-input-29-f1f879adc3d3> in <module>()\n----> 1 from . import settings\n\nSystemError: Parent module '' not loaded, cannot perform relative import\n\nIn [30]: import rym_chart_scraper\n\nImportErrorTraceback (most recent call last)\n<ipython-input-30-20055bd304a2> in <module>()\n----> 1 import rym_chart_scraper\n\nImportError: No module named 'rym_chart_scraper'\n\nIn [31]: d = DATABASE = {\n    'drivername': 'postgres',\n    'host': 'localhost',\n    'port': '5432',\n    'username': 'baasman',\n    'password': '',\n    'database': 'rymscrape'\n}\n   ....:    ....:    ....:    ....:    ....:    ....:    ....: \nIn [32]: engine = create_engine(URL(**d))\n\nImportErrorTraceback (most recent call last)\n<ipython-input-32-46dda3b7c89f> in <module>()\n----> 1 engine = create_engine(URL(**d))\n\n/Users/baasman/anaconda/lib/python3.5/site-packages/sqlalchemy/engine/__init__.py in create_engine(*args, **kwargs)\n    385     strategy = kwargs.pop('strategy', default_strategy)\n    386     strategy = strategies.strategies[strategy]\n--> 387     return strategy.create(*args, **kwargs)\n    388 \n    389 \n\n/Users/baasman/anaconda/lib/python3.5/site-packages/sqlalchemy/engine/strategies.py in create(self, name_or_url, **kwargs)\n     78                 if k in kwargs:\n     79                     dbapi_args[k] = pop_kwarg(k)\n---> 80             dbapi = dialect_cls.dbapi(**dbapi_args)\n     81 \n     82         dialect_args['dbapi'] = dbapi\n\n/Users/baasman/anaconda/lib/python3.5/site-packages/sqlalchemy/dialects/postgresql/psycopg2.py in dbapi(cls)\n    552     @classmethod\n    553     def dbapi(cls):\n--> 554         import psycopg2\n    555         return psycopg2\n    556 \n\n/Users/baasman/anaconda/lib/python3.5/site-packages/psycopg2/__init__.py in <module>()\n     48 # Import the DBAPI-2.0 stuff into top-level module.\n     49 \n---> 50 from psycopg2._psycopg import BINARY, NUMBER, STRING, DATETIME, ROWID\n     51 \n     52 from psycopg2._psycopg import Binary, Date, Time, Timestamp\n\nImportError: dlopen(/Users/baasman/anaconda/lib/python3.5/site-packages/psycopg2/_psycopg.cpython-35m-darwin.so, 2): Library not loaded: libssl.1.0.0.dylib\n  Referenced from: /Users/baasman/anaconda/lib/python3.5/site-packages/psycopg2/_psycopg.cpython-35m-darwin.so\n  Reason: image not found\n\nIn [33]: engine = create_engine('postgresql://baasman:tiger@localhost:5432/rymscrape')",
			"settings":
			{
				"buffer_size": 13729,
				"line_ending": "Unix",
				"name": "*REPL* [python]",
				"read_only": true,
				"scratch": true
			}
		},
		{
			"file": "rym_chart_scraper/settings.py",
			"settings":
			{
				"buffer_size": 2324,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		}
	],
	"build_system": "",
	"build_system_choices":
	[
		[
			[
				[
					"Packages/Python/Python.sublime-build",
					""
				],
				[
					"Packages/Python/Python.sublime-build",
					"Syntax Check"
				]
			],
			[
				"Packages/Python/Python.sublime-build",
				""
			]
		]
	],
	"build_varint": "",
	"command_palette":
	{
		"height": 147.0,
		"last_filter": "repl: she",
		"selected_items":
		[
			[
				"repl: she",
				"SublimeREPL: Shell"
			],
			[
				"repl: pyth\t",
				"SublimeREPL: Python - IPython"
			],
			[
				"syntax: she",
				"Set Syntax: Shell Script (Bash)"
			],
			[
				"repl: pyt",
				"SublimeREPL: Python - IPython"
			],
			[
				"git: ",
				"Git: Gui"
			],
			[
				"gitig",
				"Gitignore: New gitignore"
			],
			[
				"install p",
				"Package Control: Install Package"
			],
			[
				"syntax: shel",
				"Set Syntax: Shell Script (Bash)"
			],
			[
				"repl: shel",
				"SublimeREPL: Shell"
			],
			[
				"repl: shel\t",
				"SublimeREPL: Shell"
			],
			[
				"repl: ip",
				"SublimeREPL: Python - IPython"
			],
			[
				"set syntax: pytho",
				"Set Syntax: Python"
			],
			[
				"key bin",
				"Preferences: Key Bindings"
			],
			[
				"setting",
				"Preferences: Settings – Syntax Specific"
			],
			[
				"indentat",
				"Indentation: Convert to Spaces"
			],
			[
				"whit",
				"Whitespace: Remove Trailing Whitespace"
			],
			[
				"set syntax: jso",
				"Set Syntax: JSON"
			],
			[
				"set syntax: she",
				"Set Syntax: Shell Script (Bash)"
			],
			[
				"set syntax: html",
				"Set Syntax: HTML"
			],
			[
				"insta",
				"Package Control: Install Package"
			],
			[
				"repl: python",
				"SublimeREPL: Python - IPython"
			],
			[
				"repl: shell",
				"SublimeREPL: Shell"
			],
			[
				"set syntax: pyth\t",
				"Set Syntax: Python"
			],
			[
				"syntax: pyth",
				"Set Syntax: Python"
			],
			[
				"REPL: shel",
				"SublimeREPL: Shell"
			],
			[
				"REPL: R",
				"SublimeREPL: R"
			],
			[
				"syntax: R",
				"Set Syntax: R"
			],
			[
				"instal",
				"Package Control: Install Package"
			],
			[
				"remove",
				"Package Control: Remove Package"
			],
			[
				"preference",
				"Preferences: Browse Packages"
			],
			[
				"REPL: pyth",
				"SublimeREPL: Python - IPython"
			],
			[
				"syntax",
				"Set Syntax: Markdown"
			],
			[
				"install",
				"Package Control: Install Package"
			]
		],
		"width": 521.0
	},
	"console":
	{
		"height": 0.0,
		"history":
		[
		]
	},
	"distraction_free":
	{
		"menu_visible": true,
		"show_minimap": false,
		"show_open_files": false,
		"show_tabs": false,
		"side_bar_visible": false,
		"status_bar_visible": false
	},
	"expanded_folders":
	[
		"/Users/baasman/Documents/python-workspace/rym_chart_scraper",
		"/Users/baasman/Documents/python-workspace/rym_chart_scraper/rym_chart_scraper",
		"/Users/baasman/Documents/python-workspace/rym_chart_scraper/rym_chart_scraper/__pycache__",
		"/Users/baasman/Documents/python-workspace/rym_chart_scraper/rym_chart_scraper/spiders",
		"/Users/baasman/Documents/python-workspace/rym_chart_scraper/rym_chart_scraper/spiders/__pycache__"
	],
	"file_history":
	[
		"/Users/baasman/Documents/python-workspace/rym_chart_scraper/rym_chart_scraper/items.py",
		"/Users/baasman/Documents/python-workspace/rym_chart_scraper/rym_chart_scraper/utility.py",
		"/Users/baasman/.bash_profile",
		"/Users/baasman/Documents/python-workspace/rym_chart_scraper/rym_chart_scraper/settings.py",
		"/Users/baasman/Documents/python-workspace/rym_chart_scraper/rym_chart_scraper/pipelines.py",
		"/Users/baasman/Documents/python-workspace/rym_chart_scraper/rym_chart_scraper/spiders/top_albums.jl",
		"/Users/baasman/Documents/python-workspace/rym_chart_scraper/scrapy.cfg",
		"/Users/baasman/Documents/python-workspace/rym_chart_scraper/.gitignore",
		"/Users/baasman/.vimrc",
		"/Users/baasman/Documents/python-workspace/rym_chart_scraper/rym_chart_scraper/spiders/__init__.py",
		"/Users/baasman/Documents/python-workspace/rym_chart_scraper/rym_chart_scraper.sublime-project",
		"/Users/baasman/Documents/python-workspace/rym_chart_scraper/top_music_charts.py",
		"/Users/baasman/Documents/python-workspace/rym_chart_scraper/rym_chart_scraper/spiders/top_music_charts",
		"/Users/baasman/Documents/python-workspace/tutorial/tutorial/spiders/quotes_spider.py",
		"/Users/baasman/Documents/python-workspace/tutorial/tutorial/spiders/quotes.json",
		"/Users/baasman/Documents/python-workspace/tutorial/tutorial/spiders/quotes-2.html",
		"/Users/baasman/Documents/python-workspace/bokeh/bokeh_tutorial.py",
		"/Users/baasman/Documents/r-workspace/test_sub.R",
		"/Users/baasman/Documents/python-workspace/pyprogeny/README.md",
		"/Users/baasman/Documents/python-workspace/pyprogeny/pyprogeny.py",
		"/Users/baasman/Library/Application Support/Sublime Text 3/Packages/SublimeLinter/SublimeLinter.sublime-settings",
		"/Users/baasman/Library/Application Support/Sublime Text 3/Packages/Pylinter/Pylinter.sublime-settings",
		"/Users/baasman/Library/Application Support/Sublime Text 3/Packages/Anaconda/Anaconda.sublime-settings",
		"/Users/baasman/Library/Application Support/Sublime Text 3/Packages/User/SublimeREPL-python.sublime-build",
		"/Users/baasman/Documents/test.py",
		"/Users/baasman/Documents/python-workspace/test.py",
		"/Users/baasman/Downloads/pyprogeny.py",
		"/Users/baasman/Documents/python-workspace/pyprogeny/.gitignore",
		"/Users/baasman/Documents/python-workspace/django/fish_love/fish_love/urls.py",
		"/Users/baasman/Documents/python-workspace/django/fish_love/polls/urls.py",
		"/Users/baasman/Documents/python-workspace/django/fish_love/polls/static/polls/style.css",
		"/Users/baasman/Documents/python-workspace/django/fish_love/polls/static/polls/index.html",
		"/Users/baasman/Documents/python-workspace/django/fish_love/polls/admin.py",
		"/Users/baasman/Documents/python-workspace/django/cocktail/collect_cocktail/urls.py",
		"/Users/baasman/Documents/python-workspace/django/fish_love/templates/base_site.html",
		"/Users/baasman/Documents/python-workspace/django/fish_love/fish_love/settings.py",
		"/Users/baasman/Documents/python-workspace/django/fish_love/polls/models.py",
		"/Users/baasman/Documents/python-workspace/django/fish_love/polls/templates/polls/detail.html",
		"/Users/baasman/Documents/python-workspace/django/fish_love/polls/views.py",
		"/Users/baasman/Documents/python-workspace/django/fish_love/polls/templates/polls/index.html",
		"/Users/baasman/Documents/python-workspace/django/fish_love/polls/static/style.css",
		"/Users/baasman/Documents/python-workspace/django/fish_love/polls/templates/polls/results.html",
		"/Users/baasman/Documents/python-workspace/django/fish_love/polls/tests.py"
	],
	"find":
	{
		"height": 35.0
	},
	"find_in_files":
	{
		"height": 93.0,
		"where_history":
		[
			"/Users/baasman/Documents/python-workspace/rym_chart_scraper/",
			"/Users/baasman/Documents/python-workspace/rym_chart_scraper/rym_chart_scraper/spiders",
			"/Users/baasman/Documents/python-workspace/rym_chart_scraper/rym_chart_scraper",
			"/Users/baasman/Documents/python-workspace/rym_chart_scraper"
		]
	},
	"find_state":
	{
		"case_sensitive": false,
		"find_history":
		[
			"postgres",
			"from",
			"RYM_rating",
			"models",
			"SomePipeline",
			"create_deals_table",
			"response_status_cou",
			"str",
			"scrapy",
			"Artist",
			"()",
			"artist",
			"scrapy",
			"i",
			"div",
			"shell",
			", ",
			"page",
			"http",
			"page",
			"petal_width",
			"petal_length",
			"x",
			"p = figure()\np.circle('x', 'y', source=source, size=20)\nshow(p)\n",
			"square",
			"line_color",
			"circle",
			"from",
			"path",
			":\n"
		],
		"highlight": true,
		"in_selection": false,
		"preserve_case": false,
		"regex": false,
		"replace_history":
		[
			"RYMRating"
		],
		"reverse": false,
		"show_context": true,
		"use_buffer2": true,
		"whole_word": false,
		"wrap": true
	},
	"groups":
	[
		{
			"selected": 2,
			"sheets":
			[
				{
					"buffer": 0,
					"file": "rym_chart_scraper/spiders/top_music_charts.py",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 2202,
						"regions":
						{
						},
						"selection":
						[
							[
								1984,
								1984
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": ".",
									"selector": "source.python - string - comment - constant.numeric"
								},
								{
									"characters": ".",
									"selector": "source.python - string - constant.numeric"
								},
								{
									"characters": ".",
									"selector": "source.python - string - constant.numeric"
								},
								{
									"characters": ".",
									"selector": "source.python - string - constant.numeric"
								},
								{
									"characters": ".",
									"selector": "source.python - string - constant.numeric"
								}
							],
							"bracket_highlighter.busy": false,
							"bracket_highlighter.locations":
							{
								"close":
								{
								},
								"icon":
								{
								},
								"open":
								{
								},
								"unmatched":
								{
								}
							},
							"bracket_highlighter.regions":
							[
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content"
							],
							"syntax": "Packages/Python/Python.sublime-syntax",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 239.0,
						"zoom_level": 1.0
					},
					"stack_index": 2,
					"type": "text"
				},
				{
					"buffer": 1,
					"file": "rym_chart_scraper/items.py",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 266,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"bracket_highlighter.busy": false,
							"bracket_highlighter.locations":
							{
								"close":
								{
								},
								"icon":
								{
								},
								"open":
								{
								},
								"unmatched":
								{
								}
							},
							"bracket_highlighter.regions":
							[
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content"
							],
							"syntax": "Packages/Python/Python.sublime-syntax"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 3,
					"type": "text"
				},
				{
					"buffer": 2,
					"file": "rym_chart_scraper/utility.py",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 532,
						"regions":
						{
						},
						"selection":
						[
							[
								513,
								513
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": ".",
									"selector": "source.python - string - comment - constant.numeric"
								},
								{
									"characters": ".",
									"selector": "source.python - string - constant.numeric"
								}
							],
							"bracket_highlighter.busy": false,
							"bracket_highlighter.locations":
							{
								"close":
								{
								},
								"icon":
								{
								},
								"open":
								{
								},
								"unmatched":
								{
								}
							},
							"bracket_highlighter.regions":
							[
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content"
							],
							"syntax": "Packages/Python/Python.sublime-syntax"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 0,
					"type": "text"
				},
				{
					"buffer": 3,
					"file": "rym_chart_scraper/models.py",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 813,
						"regions":
						{
						},
						"selection":
						[
							[
								217,
								217
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": ".",
									"selector": "source.python - string - comment - constant.numeric"
								},
								{
									"characters": ".",
									"selector": "source.python - string - constant.numeric"
								},
								{
									"characters": ".",
									"selector": "source.python - string - constant.numeric"
								},
								{
									"characters": ".",
									"selector": "source.python - string - constant.numeric"
								}
							],
							"bracket_highlighter.busy": false,
							"bracket_highlighter.locations":
							{
								"close":
								{
								},
								"icon":
								{
								},
								"open":
								{
								},
								"unmatched":
								{
								}
							},
							"bracket_highlighter.regions":
							[
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content"
							],
							"open_with_edit": true,
							"syntax": "Packages/Python/Python.sublime-syntax",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 5,
					"type": "text"
				}
			]
		},
		{
			"selected": 2,
			"sheets":
			[
				{
					"buffer": 4,
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 2029,
						"regions":
						{
						},
						"selection":
						[
							[
								2029,
								2029
							]
						],
						"settings":
						{
							"auto_complete": true,
							"auto_indent": false,
							"bracket_highlighter.busy": false,
							"default_dir": "/Users/baasman/Documents/python-workspace/rym_chart_scraper",
							"detect_indentation": false,
							"gutter": false,
							"history_arrows": true,
							"indent_subsequent_lines": false,
							"line_numbers": false,
							"repl": true,
							"repl_external_id": "shell",
							"repl_id": "02a211ceabc7421c892da0c9e5d83b99",
							"repl_restart_args":
							{
								"cmd":
								{
									"linux":
									[
										"bash",
										"-i"
									],
									"osx":
									[
										"bash",
										"-i"
									],
									"windows":
									[
										"cmd.exe"
									]
								},
								"cmd_postfix": "\n",
								"cwd": "$file_path",
								"encoding":
								{
									"linux": "utf-8",
									"osx": "utf-8",
									"windows": "$win_cmd_encoding"
								},
								"env":
								{
								},
								"external_id": "shell",
								"suppress_echo": true,
								"syntax": "Packages/Text/Plain text.tmLanguage",
								"type": "subprocess"
							},
							"repl_sublime2": false,
							"smart_indent": false,
							"spell_check": false,
							"syntax": "Packages/Text/Plain text.tmLanguage",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 493.0,
						"zoom_level": 1.0
					},
					"stack_index": 6,
					"type": "text"
				},
				{
					"buffer": 5,
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 13729,
						"regions":
						{
						},
						"selection":
						[
							[
								13310,
								13293
							]
						],
						"settings":
						{
							"auto_complete": true,
							"auto_complete_triggers":
							[
								{
									"characters": ".",
									"selector": "source.python - string - comment - constant.numeric"
								},
								{
									"characters": ".",
									"selector": "source.python - string - constant.numeric"
								}
							],
							"auto_indent": false,
							"bracket_highlighter.busy": false,
							"bracket_highlighter.locations":
							{
								"close":
								{
								},
								"icon":
								{
								},
								"open":
								{
								},
								"unmatched":
								{
								}
							},
							"bracket_highlighter.regions":
							[
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content"
							],
							"default_dir": "/Users/baasman/Documents/python-workspace/rym_chart_scraper",
							"detect_indentation": false,
							"gutter": false,
							"history_arrows": true,
							"indent_subsequent_lines": false,
							"line_numbers": false,
							"repl": true,
							"repl_external_id": "python",
							"repl_id": "060c92a381e046e8b93e989587db7d4a",
							"repl_restart_args":
							{
								"autocomplete_server": true,
								"cmd":
								{
									"linux":
									[
										"python",
										"-u",
										"${packages}/SublimeREPL/config/Python/ipy_repl.py"
									],
									"osx":
									[
										"python",
										"-u",
										"${packages}/SublimeREPL/config/Python/ipy_repl.py"
									],
									"windows":
									[
										"python",
										"-u",
										"${packages}/SublimeREPL/config/Python/ipy_repl.py"
									]
								},
								"cwd": "$file_path",
								"encoding": "utf8",
								"extend_env":
								{
									"PYTHONIOENCODING": "utf-8",
									"SUBLIMEREPL_EDITOR": "subl -w"
								},
								"external_id": "python",
								"syntax": "Packages/Python/Python.tmLanguage",
								"type": "subprocess"
							},
							"repl_sublime2": false,
							"smart_indent": false,
							"spell_check": false,
							"syntax": "Packages/Python/Python.tmLanguage",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 5781.0,
						"zoom_level": 1.0
					},
					"stack_index": 4,
					"type": "text"
				},
				{
					"buffer": 6,
					"file": "rym_chart_scraper/settings.py",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 2324,
						"regions":
						{
						},
						"selection":
						[
							[
								403,
								403
							]
						],
						"settings":
						{
							"bracket_highlighter.busy": false,
							"bracket_highlighter.locations":
							{
								"close":
								{
								},
								"icon":
								{
								},
								"open":
								{
								},
								"unmatched":
								{
								}
							},
							"bracket_highlighter.regions":
							[
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content"
							],
							"syntax": "Packages/Python/Python.sublime-syntax"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 1,
					"type": "text"
				}
			]
		}
	],
	"incremental_find":
	{
		"height": 23.0
	},
	"input":
	{
		"height": 31.0
	},
	"layout":
	{
		"cells":
		[
			[
				0,
				0,
				1,
				1
			],
			[
				0,
				1,
				1,
				2
			]
		],
		"cols":
		[
			0.0,
			1.0
		],
		"rows":
		[
			0.0,
			0.466127580222,
			1.0
		]
	},
	"menu_visible": true,
	"output.exec":
	{
		"height": 253.0
	},
	"output.find_results":
	{
		"height": 0.0
	},
	"output.git":
	{
		"height": 100.0
	},
	"pinned_build_system": "Packages/Python/Python.sublime-build",
	"project": "rym_chart_scraper.sublime-project",
	"replace":
	{
		"height": 42.0
	},
	"save_all_on_build": true,
	"select_file":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"",
				"~/Documents/r-workspace/test_sub.R"
			]
		],
		"width": 0.0
	},
	"select_project":
	{
		"height": 500.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 380.0
	},
	"select_symbol":
	{
		"height": 307.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 392.0
	},
	"selected_group": 0,
	"settings":
	{
	},
	"show_minimap": true,
	"show_open_files": true,
	"show_tabs": true,
	"side_bar_visible": true,
	"side_bar_width": 198.0,
	"status_bar_visible": true,
	"template_settings":
	{
	}
}
